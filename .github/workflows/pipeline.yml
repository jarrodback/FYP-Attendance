name: Build-Test-Deploy Pipeline

on:
  workflow_dispatch:
  pull_request:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: server/package-lock.json

    - name: Server - run build
      run: |
        cd server
        npm ci
        npm run build --if-present
    - name: UI - run build
      run: |
        cd ui
        npm ci
        npm run build --if-present
    - uses: actions/upload-artifact@master
      with:
        name: build-ui
        path: |
          ui
          !ui/node_modules
    - uses: actions/upload-artifact@master
      with:
        name: build-server
        path: |
          server
          !server/node_modules

  test-ui-unit:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
    - uses: actions/download-artifact@master
      with:
        name: build-ui

    - name: UI - run unit tests    
      run: |
        npm i
        npm test

  test-server:
    runs-on: ubuntu-latest
    needs: [build]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: hallam
          POSTGRES_DB: attendance-system-testing
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/download-artifact@master
      with:
        name: build-server

    - name: Server - run tests
      run: |
        npm i
        npm test
    - uses: actions/upload-artifact@master
      with:
        name: coverage-server
        path: |
          coverage

  coverage:
    runs-on: ubuntu-latest
    needs: [test-server,test-ui-unit]

    if: >- 
      github.event_name == 'pull_request'
    steps:
    - uses: actions/download-artifact@master
      with:
        name: coverage-server

    - name: Code Coverage Server
      uses: romeovs/lcov-reporter-action@v0.3.1
      with:
        lcov-file: lcov.info
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/download-artifact@master
      with:
        name: coverage-ui

    - name: Code Coverage UI
      uses: romeovs/lcov-reporter-action@v0.3.1
      with:
        lcov-file: lcov.info
        github-token: ${{ secrets.GITHUB_TOKEN }}